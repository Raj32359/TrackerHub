package com.tarckerhub.controller;

import javax.websocket.server.PathParam;

import org.apache.commons.lang3.RandomStringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.tarckerhub.model.Course;
import com.tarckerhub.resposit.CourseRepository;
import com.tarckerhub.service.StorageService;

@RestController
@RequestMapping("/course")
@CrossOrigin(origins = "http://localhost:9092", maxAge = 36000)
public class CourseController {
	
	@Autowired
	private CourseRepository courseRepository;
	
	@PostMapping("/")
	public ResponseEntity<?> saveCourse(@RequestBody Course course){
		String serialID = RandomStringUtils.random(8, "0123456789");
		System.out.println("serial Id : "+serialID);
		course.setCourseId(serialID);
		
		System.out.println("course :: "+course);
		return ResponseEntity.status(HttpStatus.CREATED).body("added Successfully");
	}
	
	@Autowired
	private StorageService service;
	
	@PostMapping("/upload")
	public ResponseEntity<?> saveFile(@RequestParam("file") MultipartFile file){

		return new ResponseEntity<>(service.uploadFile(file), HttpStatus.OK);
	}
	
	@GetMapping("/")
	public ResponseEntity<?> listAllCourse(){
		return ResponseEntity.status(HttpStatus.CREATED).body("added Successfully");
	}
	
	@GetMapping("/{serialId}")
	public ResponseEntity<?> listAllCourseBySerialId(@PathParam("serialId") String serialId){
		return ResponseEntity.status(HttpStatus.CREATED).body("added Successfully");
	}
	
	@PatchMapping("/{serialId}")
	public ResponseEntity<?> updateCourseBySerialId(@PathParam("serialId") String serialId){
		return ResponseEntity.status(HttpStatus.CREATED).body("added Successfully");
	}
	
	@DeleteMapping("/{serialId}")
	public ResponseEntity<?> deleteCourseBySerialId(@PathParam("serialId") String serialId){
		return ResponseEntity.status(HttpStatus.CREATED).body("added Successfully");
	}

}
